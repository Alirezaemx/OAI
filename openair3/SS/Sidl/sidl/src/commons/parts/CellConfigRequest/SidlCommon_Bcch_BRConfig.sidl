/* vim: set ft=cpp:
 *****************************************************************
 *
 * Module : SIDL commons.
 *
 * Purpose: Provide common SIDL types and definitions.
 *
 *****************************************************************
 *
 *  Copyright (c) 2009-2021 SEQUANS Communications.
 *  All rights reserved.
 *
 *  This is confidential and proprietary source code of SEQUANS
 *  Communications. The use of the present source code and all
 *  its derived forms is exclusively governed by the restricted
 *  terms and conditions set forth in the SEQUANS
 *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE
 *  AGREEMENT. The present source code and all its derived
 *  forms can ONLY and EXCLUSIVELY be used with SEQUANS
 *  Communications' products. The distribution/sale of the
 *  present source code and all its derived forms is EXCLUSIVELY
 *  RESERVED to regular LICENCE holder and otherwise STRICTLY
 *  PROHIBITED.
 *
 *****************************************************************
 */

#pragma once

// SIDL keywords.
#include "msg.sidl"

// SIDL commons.
#include "SidlCommon.sidl"

typedef ASN_NAME(MasterInformationBlock, schedulingInfoSIB1_BR_r13) SchedulingInfoSIB1_BR_r13_Type;
typedef struct ASN_NAME(SystemInformationBlockType1_v1310_IEs, bandwidthReducedAccessRelatedInfo_r13) BandwidthReducedAccessRelatedInfo_Type;

typedef SIDL_DYNAMIC(int32_t, SI_SubframeOffsetList_Type);

struct Bcch_BRToPbchConfig_Type {
	bool EnableMIB_Repetition;
};

struct Sib1_BRSchedul_Type {
	SchedulingInfoSIB1_BR_r13_Type SchedulingInfoSIB1_BR_r13;
};

struct Bcch_BRToPdschConfig_Type {
	SIDL_OPTIONAL_OF_STRUCT(Sib1_BRSchedul_Type, Sib1_BRSchedul);
	SIDL_OPTIONAL(BandwidthReducedAccessRelatedInfo_Type, SiSchedul);
	SIDL_OPTIONAL(SI_SubframeOffsetList_Type, SubframeOffsetList);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NAME(BCCH_DL_SCH_Message_BR), BR_SI_List_Type);
typedef SIDL_DYNAMIC(BR_SI_List_Type, BR_SegmentedSI_List_Type);

struct Bcch_BRInfo_Type {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(Bcch_BRInfo_Type, ASN_NAME(BCCH_BCH_Message), MIB);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(Bcch_BRInfo_Type, ASN_NAME(BCCH_DL_SCH_Message_BR), SIB1);
	SIDL_OPTIONAL(BR_SI_List_Type, SIs);
	SIDL_OPTIONAL(BR_SegmentedSI_List_Type, SegmentedSIs);
};

struct Bcch_BRConfig_Type {
	SIDL_OPTIONAL_OF_STRUCT(Bcch_BRToPbchConfig_Type, Pbch);
	SIDL_OPTIONAL_OF_STRUCT(Bcch_BRToPdschConfig_Type, Pdsch);
	SIDL_OPTIONAL_OF_STRUCT(Bcch_BRInfo_Type, BcchInfo);
	SIDL_OPTIONAL_WITH_PFX(Bcch_BRConfig_Type, Null_Type, StopSib1Transmission);
};
