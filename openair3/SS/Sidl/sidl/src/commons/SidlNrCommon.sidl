/* vim: set ft=cpp:
 *****************************************************************
 *
 * Module : SIDL commons.
 *
 * Purpose: Provide common SIDL types and definitions.
 *
 *****************************************************************
 *
 *  Copyright (c) 2009-2021 SEQUANS Communications.
 *  All rights reserved.
 *
 *  This is confidential and proprietary source code of SEQUANS
 *  Communications. The use of the present source code and all
 *  its derived forms is exclusively governed by the restricted
 *  terms and conditions set forth in the SEQUANS
 *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE
 *  AGREEMENT. The present source code and all its derived
 *  forms can ONLY and EXCLUSIVELY be used with SEQUANS
 *  Communications' products. The distribution/sale of the
 *  present source code and all its derived forms is EXCLUSIVELY
 *  RESERVED to regular LICENCE holder and otherwise STRICTLY
 *  PROHIBITED.
 *
 *****************************************************************
 */

#pragma once

// SIDL keywords.
#include "msg.sidl"

// SIDL commons.
#include "SidlCommonBase.sidl"
#include "SidlCommon.sidl"
// #include "SidlASN1.sidl"

// TODO: move to NR ASN1
typedef int32_t ASN_NAME(DRB_Identity);

SIDL_UNION_ENUM(NR_RadioBearerId_Type) {
	NR_RadioBearerId_Type_UNBOUND_VALUE,
	NR_RadioBearerId_Type_Srb,
	NR_RadioBearerId_Type_Drb
};
SIDL_UNION_BEGIN(NR_RadioBearerId_Type) {
	SIDL_UNION_CASE(NR_RadioBearerId_Type_Srb)
		SRB_Identity_Type Srb;
	SIDL_UNION_CASE(NR_RadioBearerId_Type_Drb)
		DRB_Identity Drb;
} SIDL_UNION_END;

SIDL_UNION_ENUM(NR_RoutingInfo_Type) {
	NR_RoutingInfo_Type_UNBOUND_VALUE,
	NR_RoutingInfo_Type_None,
	NR_RoutingInfo_Type_RadioBearerId,
	NR_RoutingInfo_Type_QosFlow
};
SIDL_UNION_BEGIN(NR_RoutingInfo_Type) {
	SIDL_UNION_CASE(NR_RoutingInfo_Type_None)
		Null_Type None;
	SIDL_UNION_CASE(NR_RoutingInfo_Type_RadioBearerId)
		struct NR_RadioBearerId_Type RadioBearerId;
	SIDL_UNION_CASE(NR_RoutingInfo_Type_QosFlow)
		struct QosFlow_Identification_Type QosFlow;
} SIDL_UNION_END;

typedef Null_Type NR_RoutingInfoSUL_Type;

struct NR_IndAspCommonPart_Type {
	NR_CellId_Type CellId;
	struct NR_RoutingInfo_Type RoutingInfo;
	SIDL_OPTIONAL(NR_RoutingInfoSUL_Type, RoutingInfoSUL);
	struct RlcBearerRouting_Type RlcBearerRouting;
	struct TimingInfo_Type TimingInfo;
	struct IndicationStatus_Type Status;
};

struct NR_ReqAspCommonPart_Type {
	NR_CellId_Type CellId;
	struct NR_RoutingInfo_Type RoutingInfo;
	struct RlcBearerRouting_Type RlcBearerRouting;
	struct TimingInfo_Type TimingInfo;
	struct ReqAspControlInfo_Type ControlInfo;
};
