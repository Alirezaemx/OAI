/* vim: set ft=cpp:
 *****************************************************************
 *
 * Module : SIDL commons.
 *
 * Purpose: Provide common SIDL types and definitions.
 *
 *****************************************************************
 *
 *  Copyright (c) 2009-2021 SEQUANS Communications.
 *  All rights reserved.
 *
 *  This is confidential and proprietary source code of SEQUANS
 *  Communications. The use of the present source code and all
 *  its derived forms is exclusively governed by the restricted
 *  terms and conditions set forth in the SEQUANS
 *  Communications' EARLY ADOPTER AGREEMENT and/or LICENCE
 *  AGREEMENT. The present source code and all its derived
 *  forms can ONLY and EXCLUSIVELY be used with SEQUANS
 *  Communications' products. The distribution/sale of the
 *  present source code and all its derived forms is EXCLUSIVELY
 *  RESERVED to regular LICENCE holder and otherwise STRICTLY
 *  PROHIBITED.
 *
 *****************************************************************
 */

#pragma once

// SIDL keywords.
#include "msg.sidl"

// SIDL commons.
#include "SidlBase.sidl"

// Macro to get conventional name for ASN.1 type name,
// just concatenation by _.
#define ASN_NAME(...) _PP_AUTO_CAT(__VA_ARGS__)
#define ASN_ENUM(aSNNAME) _PP_AUTO_CAT(aSNNAME, e)
#define ASN_ENUM_VAL(aSNNAME, eNUMVAL) _PP_AUTO_CAT(aSNNAME, eNUMVAL)

// Titan mangles 'message' field.
GLOBAL_METADATA_VAR(fields_map, "message=message_ start=start_");

typedef bool Null;
