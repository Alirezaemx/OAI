version: '3'

services:
  sdnc-web:
    image: ${SDNC_WEB_IMAGE}
    container_name: sdnc-web
    environment:
      - ENABLE_OAUTH=true
      - SDNRHOST=sdnc
    ports:
      - ${PUBPORT_SDNCWEB}:8080
    depends_on:
      - sdnc
    networks:
      - smo
  sdnc:
    image: ${SDNC_IMAGE}
    container_name: sdnc
    environment:
      - SDNRCONTROLLERID=c94bbd5f-d456-44bd-aa7a-47b274f73762
      - A1_ADAPTER_NORTHBOUND=false
      - CCSDK_REPLICAS=0
      - DOMAIN=""
      - ENABLE_OAUTH=true
      - ODL_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ODL_CERT_DIR=/opt/opendaylight/current/certs
      - SDNC_CONFIG_DIR=/opt/onap/ccsdk/data/properties
      - SDNRDBURL=http://sdnrdb:9200
      - SDNRDBTYPE=ELASTICSEARCH
      - SDNRDM=true
      - SDNRINIT=true
      - SDNRONLY=true
      - SDNRWT=true
      - SDNR_ASYNC_HANDLING=true
      - SDNR_ASYNC_POOLSIZE=200
      - SDNR_NETCONF_CALLHOME_ENABLED=true
      - JAVA_OPTS=-Xms256m -Xmx4g
    volumes:
      - ./sdnc/certs/certs.properties:/opt/opendaylight/current/certs/certs.properties
      - ./sdnc/certs/keys0.zip:/opt/opendaylight/current/certs/keys0.zip
      - ./sdnc/devicemanager.properties:/opt/opendaylight/etc/devicemanager.properties
      - ./sdnc/mountpoint-registrar.properties:/opt/opendaylight/etc/mountpoint-registrar.properties
      - ./sdnc/oauth-provider.config.json:/opt/opendaylight/etc/oauth-provider.config.json
      - ./sdnc/oauth-aaa-app-config.xml:/opt/onap/sdnc/data/oauth-aaa-app-config.xml
    depends_on:
      - sdnrdb
      - dmaap
      - ves-collector
    networks:
      - oam
      - smo

  sdnrdb:
    image: ${SDNRDB_IMAGE}
    container_name: sdnrdb
    environment:
      - discovery.type=single-node
      - discovery.seed_hosts='["127.0.0.1"]'
      # - discovery.seed_providers
      # - cluster.initial_master_nodes
    networks:
      - smo


  ves-collector:
    image: ${VES_COLLECTOR_IMAGE}
    container_name: ves-collector
    environment:
      - DMAAPHOST=onap-dmaap
    ports:
      - ${PUBPORT_VES}:8443
    volumes:
      - ./ves-collector/collector.properties:/opt/app/VESCollector/etc/collector.properties
    networks:
      - smo
      - oam

  zookeeper:
    image: ${ZOOKEEPER_IMAGE}
    container_name: zookeeper
    environment:
      - ZOOKEEPER_REPLICAS=1
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_SYNC_LIMIT=5
      - ZOOKEEPER_INIT_LIMIT=10
      - ZOOKEEPER_MAX_CLIENT_CNXNS=200
      - ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT=3
      - ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL=24
      - ZOOKEEPER_CLIENT_PORT=2181
      - KAFKA_OPTS=-Djava.security.auth.login.config=/etc/zookeeper/secrets/jaas/zk_server_jaas.conf -Dzookeeper.kerberos.removeHostFromPrincipal=true -Dzookeeper.kerberos.removeRealmFromPrincipal=true -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider -Dzookeeper.requireClientAuthScheme=sasl
      - ZOOKEEPER_SERVER_ID=
    volumes:
      -  ./zookeeper/zk_server_jaas.conf:/etc/zookeeper/secrets/jaas/zk_server_jaas.conf
    networks:
      - smo

  kafka:
    image: ${KAFKA_IMAGE}
    container_name: kafka
    environment:
      - enableCadi=false
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS=40000
      - KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS=40000
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL_PLAINTEXT:PLAINTEXT,EXTERNAL_PLAINTEXT:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL_PLAINTEXT://kafka:9092
      - KAFKA_LISTENERS=INTERNAL_PLAINTEXT://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL_PLAINTEXT
      - KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE=false
      - KAFKA_OPTS=-Djava.security.auth.login.config=/etc/kafka/secrets/jaas/zk_client_jaas.conf
      - KAFKA_ZOOKEEPER_SET_ACL=true
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      # Reduced the number of partitions only to avoid the timeout error for the first subscribe call in slow environment
      - KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS=1
    depends_on:
     - zookeeper
    volumes:
      - ./kafka/zk_client_jaas.conf:/etc/kafka/secrets/jaas/zk_client_jaas.conf
    networks:
      - smo

  dmaap:
    image: ${DMAAP_IMAGE}
    container_name: onap-dmaap
    environment:
      enableCadi: 'false'
    depends_on:
      - zookeeper
      - kafka
    volumes:
      - ./dmaap/MsgRtrApi.properties:/appl/dmaapMR1/bundleconfig/etc/appprops/MsgRtrApi.properties
      - ./dmaap/logback.xml:/appl/dmaapMR1/bundleconfig/etc/logback.xml
      - ./dmaap/cadi.properties:/appl/dmaapMR1/etc/cadi.properties
    networks:
      - smo

networks:
  oam:
    external: true
  smo:
    external: true
  