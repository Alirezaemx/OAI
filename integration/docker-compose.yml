version: '3'

services:
  sdnc-web:
    image: ${SDNC_WEB_IMAGE}
    container_name: sdnc-web
    environment:
      - ENABLE_OAUTH=true
      - SDNRHOST=sdnc
    ports:
      - ${PUBPORT_SDNCWEB}:8080
    depends_on:
      - sdnc
    networks:
      - smo
  sdnc:
    image: ${SDNC_IMAGE}
    container_name: sdnc
    environment:
      - SDNRCONTROLLERID=c94bbd5f-d456-44bd-aa7a-47b274f73762
      - A1_ADAPTER_NORTHBOUND=false
      - CCSDK_REPLICAS=0
      - DOMAIN=""
      - ENABLE_OAUTH=true
      - ODL_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ODL_CERT_DIR=/opt/opendaylight/current/certs
      - SDNC_CONFIG_DIR=/opt/onap/ccsdk/data/properties
      - SDNRDBURL=http://sdnrdb:9200
      - SDNRDBTYPE=ELASTICSEARCH
      - SDNRDM=true
      - SDNRINIT=true
      - SDNRONLY=true
      - SDNRWT=true
      - SDNR_ASYNC_HANDLING=true
      - SDNR_ASYNC_POOLSIZE=200
      - SDNR_NETCONF_CALLHOME_ENABLED=true
      - JAVA_OPTS=-Xms256m -Xmx4g
    volumes:
      - ./sdnc/certs/certs.properties:/opt/opendaylight/current/certs/certs.properties
      - ./sdnc/certs/keys0.zip:/opt/opendaylight/current/certs/keys0.zip
      - ./sdnc/devicemanager.properties:/opt/opendaylight/etc/devicemanager.properties
      - ./sdnc/mountpoint-registrar.properties:/opt/opendaylight/etc/mountpoint-registrar.properties
      - ./sdnc/oauth-provider.config.json:/opt/opendaylight/etc/oauth-provider.config.json
      - ./sdnc/oauth-aaa-app-config.xml:/opt/onap/sdnc/data/oauth-aaa-app-config.xml
    depends_on:
      - sdnrdb
      - dmaap-kafka
      - dcae-ves-collector
    networks:
      - oam
      - smo

  sdnrdb:
    image: ${SDNRDB_IMAGE}
    container_name: sdnrdb
    environment:
      - discovery.type=single-node
      - discovery.seed_hosts='["127.0.0.1"]'
      # - discovery.seed_providers
      # - cluster.initial_master_nodes
    networks:
      - smo


  dcae-pm-mapper:
    image: ${PM_MAPPER_IMAGE}
    container_name: dcae-pm-mapper
    depends_on:
      dmaap-dr-prov:
        condition: service_healthy
    environment:
      CBS_CLIENT_CONFIG_PATH: ${PM_MAPPER_TARGET_CONFIG_PATH}
      CONFIG_BINDING_SERVICE: 0.0.0.0
      CONFIG_BINDING_SERVICE_SERVICE_PORT: 10000
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,address=*:5005,server=y,suspend=n
      PROCESSING_LIMIT_RATE: 1
      PROCESSING_THREADS_COUNT: 1
      THREADS_MULTIPLIER: 1
    # extra_hosts:
    # - dmaap-dr-node:${DMAAP_DR_NODE_IP}
    # - message-router:$MR_IP
    hostname: dcae-pm-mapper
    networks:
      - smo
    # ports:
    # - ${PM_MAPPER_PORT_1}:8081
    # - ${PM_MAPPER_PORT_2}:5005
    volumes:
    - ./dcae/pm_mount_config.yaml:${PM_MAPPER_TARGET_CONFIG_PATH}
    - ./dcae/certs:/opt/app/pm-mapper/etc/certs/
  dcae-ves-collector:
    image: ${DCAE_VES_COLLECTOR_IMAGE}
    container_name: dcae-ves-collector
    environment:
      DMAAPHOST: dmaap
    hostname: dcae-ves-collector
    labels:
    - traefik.enable=true
    - traefik.http.routers.ves.rule=Host(`ves.${SOLUTION_DOMAIN}`)
    - traefik.http.routers.ves.service=ves
    - traefik.http.routers.ves.tls=true
    - traefik.http.services.ves.loadbalancer.server.port=8443
    - traefik.http.services.ves.loadbalancer.server.scheme=https
    - traefik.http.routers.ves.tls.certresolver=CertificateResolver0
    networks:
      - oam
      - smo
      - traefik-proxy
    # ports:
    # - 8080:8080
    # - 8443:8443
    volumes:
    - ./dcae/collector.properties:/opt/app/VESCollector/etc/collector.properties
    - ./dcae/ves-dmaap-config.json:/opt/app/VESCollector/etc/ves-dmaap-config.json
    - ./dcae/externalRepo:/opt/app/VESCollector/etc/externalRepo
  
  dcae-dfc:
    image: ${DCAE_DFC_IMAGE}
    container_name: dcae-dfc
    environment:
      CBS_CLIENT_CONFIG_PATH: ${DCAE_DFC_TARGET_CONFIG_PATH}
      CONFIG_BINDING_SERVICE: 0.0.0.0
      CONFIG_BINDING_SERVICE_SERVICE_PORT: 10000
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,address=*:8000,server=y,suspend=n
    # extra_hosts:
    # - dmaap-dr-node:${DMAAP_DR_NODE_IP}
    # - dmaap-dr-prov:${DMAAP_DR_PROV_IP}
    volumes:
    - ./dcae/dfc_mount_config.yaml:${DCAE_DFC_TARGET_CONFIG_PATH}
    - ./dcae/dfc_spring_application.yaml:${DCAE_DFC_TARGET_SPRING_CONFIG}
    networks:
      - smo
    # ports:
    # - 8100:8100
    # - 8000:8000

  dmaap-dr-node:
    image: ${DMAAP_DR_NODE_IMAGE}
    container_name: dmaap-dr-node
    hostname: dmaap-dr-node
    depends_on:
      dmaap-dr-prov:
        condition: service_healthy
    # extra_hosts:
    # - dmaap-dr-prov:$DMAAP_DR_PROV_IP
    # - dcae-pm-mapper:$PM_MAPPER_IP
    volumes:
    - ./dmaap/dr_node.properties:/opt/app/datartr/etc/node.properties
    networks:
      - smo
    # ports:
    # - ${DMAAP_DR_NODE_PORT_1}:8443
    # - ${DMAAP_DR_NODE_PORT_2}:8080

  dmaap-dr-prov:
    image: ${DMAAP_DR_PROV_IP_IMAGE}
    container_name: dmaap-dr-prov
    hostname: dmaap-dr-prov
    depends_on:
      dmaap-dr-mariadb:
        condition: service_healthy
    # extra_hosts:
    # - dmaap-dr-node:${DMAAP_DR_NODE_IP}
    # - dcae-pm-mapper:${PM_MAPPER_IP}
    healthcheck:
      interval: 10s
      retries: 5
      test:
      - CMD
      - curl
      - -f
      - http://dmaap-dr-prov:8080/internal/prov
      timeout: 30s
    volumes:
    - ./dmaap/dr_provserver.properties:/opt/app/datartr/etc/provserver.properties
    networks:
      - smo
    # ports:
    # - 20443:8443
    # - ${DMAAP_DR_PROV_PORT_1}:8443
    # - ${DMAAP_DR_PROV_PORT_2}:8080

  dmaap-kafka:
    container_name: dmaap-kafka
    image: ${DMAAP_KAFKA_IMAGE}
    hostname: kafka
    depends_on:
    - dmaap-zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL_PLAINTEXT://kafka:9092
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL_PLAINTEXT
      KAFKA_LISTENERS: INTERNAL_PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL_PLAINTEXT:PLAINTEXT,EXTERNAL_PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/jaas/zk_client_jaas.conf
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 40000
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 40000
      KAFKA_ZOOKEEPER_SET_ACL: 'true'
      enableCadi: 'false'
    volumes:
    - ./dmaap/zk_client_jaas.conf:/etc/kafka/secrets/jaas/zk_client_jaas.conf
    networks:
      smo:
        aliases:
        - kafka
    # ports:
    # - 9092:9092

  dmaap-message-router:
    image: ${DMAAP_MR_IMAGE}
    container_name: dmaap-message-router
    depends_on:
    - dmaap-zookeeper
    - dmaap-kafka
    environment:
      enableCadi: 'false'
    volumes:
    - ./dmaap/MsgRtrApi.properties:/appl/dmaapMR1/bundleconfig/etc/appprops/MsgRtrApi.properties
    - ./dmaap/logback.xml:/appl/dmaapMR1/bundleconfig/etc/logback.xml
    - ./dmaap/cadi.properties:/appl/dmaapMR1/etc/cadi.properties
    networks:
      smo:
        aliases:
        - dmaap
    # ports:
    # - 3904:3904
    # - 3905:3905

  dmaap-zookeeper:
    image: ${DMAAP_ZOOKEEPER_IMAGE}
    container_name: dmaap-zookeeper
    hostname: zookeeper
    environment:
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/zookeeper/secrets/jaas/zk_server_jaas.conf
        -Dzookeeper.kerberos.removeHostFromPrincipal=true -Dzookeeper.kerberos.removeRealmFromPrincipal=true
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dzookeeper.requireClientAuthScheme=sasl
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: 24
      ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT: 3
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_MAX_CLIENT_CNXNS: 200
      ZOOKEEPER_REPLICAS: 1
      ZOOKEEPER_SERVER_ID: null
      ZOOKEEPER_SYNC_LIMIT: 5
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
    - ./dmaap/zk_server_jaas.conf:/etc/zookeeper/secrets/jaas/zk_server_jaas.conf
    # ports:
    # - 2181:2181
    networks:
      smo:
        aliases:
        - zookeeper
  dmaap-dr-mariadb:
    image: ${DMAAP_DR_DB_IMAGE}
    container_name: dmaap-dr-mariadb
    hostname: mariadb
    environment:
      MYSQL_DATABASE: datarouter
      MYSQL_PASSWORD: datarouter
      MYSQL_ROOT_PASSWORD: datarouter
      MYSQL_USER: datarouter
    healthcheck:
      interval: 10s
      retries: 5
      test:
      - CMD
      - mysqladmin
      - ping
      - -h
      - localhost
      - --silent
      timeout: 30s
    networks:
      - smo
    # ports:
    # - ${DMAAP_DR_DB_PORT}:3306
networks:
  oam:
    external: true
  smo:
    external: true
  traefik-proxy:
    external: true